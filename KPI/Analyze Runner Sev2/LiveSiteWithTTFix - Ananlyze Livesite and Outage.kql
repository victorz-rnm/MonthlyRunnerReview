https://nrp.kusto.windows.net/test?query=H4sIAAAAAAAEAOVYbW%2fbOBL%2bHiD%2fgesD1vKeE9vxS5y2LpDaydVAnHoTb3tAmzMYiZa5lkQvSSXx3u799puhREuy1bS9F9wdzkAiihw%2bMxw%2bnBkqYJoEQqzeUHc1C8mAUF84rX7Tq708PAhgcCZ5%2bFaHwVBEmkUaJByl5Qv445FfOzz46%2bEBgR%2bKKs3WLRCQbB1QlzmVaqVOzL9tD8Ee%2fAfza6gC5zYa5CYRICqkUpNfYqGZIjTySCSio3vJ6Aq0EbUGGVVUeJJX%2bH10r9YvMx1gT4mSt7PJVQkwgeVxvSnCtwvwNEzQv0%2fRT0rQQYZJhbaX4XUKeLhQA%2fipkiK2SxCNO0rRugW0IMF6lUJ1SqACptSRXtKoFK5XgPMTuNcpXLcEzgcHaiY%2fj3haQPxD%2b%2bylpYTRV8YA2I%2fguTX385CvPv7l9d0PaKJ14GkBMxQP6X5r6u8w56wA9N3RkcE6Osqj9T%2bD5oowBON2EFvNPOSnT%2bqPeSqe5bCuhQxpwH9lJIwDzdew4sclB9IbhhMtCLWeMF3JxETH4cHv6dn0mR5HLvfAkiserfBs8vS99IAGiRAMuVQ7laXWa%2fWi0VgLqWlwHHJXCiUWmrvhMSywwcN146HdsJCq4TFNeaAasCDbCetrLEXIKnZxRgf8ClbC5lIux5qF1s5HIVf4Pva%2bxVKPPRzTX2PJjH2hMu3Gu4g15ggIDgxVg3lco4mZimdtu4VlBmzGaHhNQ4a2RfB8QUoj3Drg4GqFYdC0jSye30%2bZA0BOMgXbCkKcLxwqJd3MAxb5eulsEWrkNWnVM8SPrbs6QTSLk2Bkpv6ZRxsaoZ1jTwG0twFp7jofq61mt3NWrRNo9HotbPRO2%2b0ONvon%2fdYJNjonvbMmNk67Z20j3Ov3%2bt1kVrfT7yStzqnpOmt3O2073zR6zVbPNFqtTqdvkFrtbrPdrt7ZTEGDYEQ1BdPcIAaqSqdq9w0Y5cGQFMcucEZSGD9egYw4fuSRJx7VccR0tXaMQvdUMac6hAMmIuj6E9PzsRvOLdHV%2fAPXy9ns6fDgNzgzTDIyER5fcOaBdgZezdJZJvLuMYLNTJwH3CVOwZs1k2q4YuFabxwypRIUWYVAHzN8yx6YhGhEXg3IyeEBkBHs03gQgthjRC8ZGQ8n8KSaLKkia9h3mJ7ZYAFnmzXQ7G%2bkesUf2C1wtkqEJGP1LoYYxc5dHdOADAakhVM9oAao0CQzp05mXAfAuqGJvrjqesEH9YKqem7x14at9j2ikc73YIqnrj4POFV1kpzZoYjxkKcvgVDMS7tmsxH%2bu8Z%2fF5GPj0v%2bhI9JfessaMX3ypV8rbmI0pljdR5rMWKauZp59Z2l18lUKB1CTGJhutCs41ZTHYNx9vmWqplC3RDdEei23WvesIAaXHzBeJNpSJkK%2bzQe4RlKKYuOVnEItQdG5PtNztkwIyfEnqAG8nKOBwwtgLVM85A5C4zqer59z29QdQO%2fo8nkyPOqtVoOzNqWRostC21%2frU4WNFCsnu%2fZZUv51GR0H2Dbn7hvd3rSC8PNetYu%2bHZfYW4wmbjbVdz0fYD8qEUo9OVcZpi2C2E6k5m2aYi5LwedVi5pAmX3pSZWZpJXDZHsqpCbql%2bVRbslWRRiqBZJlnFywQao0kjIuKkazWspfmb%2fyggAxu%2flPacoUvt%2fjBLp3qLPfxaQJOBq4A0CttAihmyWZOUlj%2fRxFIdzCO9Qm4K5atBtJt2wlwDpbwZqGS8WULo5OKM0G6Z9X0iCY3eCkecD5KOliBWDQbuvQ5wYXnIWeBeQUbm9Fu0mmzTdJREvSWSfzYK2OkWhhCcDUhkrFbMhrkvITcUqyaLlNzmESn8e0ienyNUfasWYWzfa%2f0lVyc8aDpRHvXjEk5VB%2bi2sDA7jeyhLMFBDeCZFgw4PwDciKvT8mziSceNrmaBuI7pWS6HfnxQpkMtSxaLoK3ny%2bXrIQpRFphsh9JCCif%2blbtvap7aXsQUYQyT0ExcH9on3HG0L6y26JTcEfhmemzgFTEzjFfSM4Dpuwx4OFL%2b1ODBsR00GNWDem80Qrts%2bs%2b4tWPAf96%2fd7Dexn3kY0o25jhG8oZWxtKx2%2fzJNv22n8iy9gGwuIxpkm5ZhZJdVZcLGis0V0042pbYbHZ45DRlW%2bWnYFoETrvDCD6RIShHiaBGIR3B%2bksVq5LsBqcKlUAQPzKua2iRfseRYAFyBm2WzVsvKgLRm2flg4BTOdGaMzTEBVegCF%2ffa8CFhMN5uKudr%2flPEntYmO19CQQM3cQW37urwZno%2bHYOBOxOub6Y%2fCiORtEqFPsLAHdQFEgoDcgtWkAsp4XZ0g%2fR4y%2f3lXaVekcwH8gZQPAQJ4g7IlfC5S4MRVysyJJeSsVvzfW8ItQYO4EcZHExnFuZ%2bSFLxJb2X3J3agzISjxEo3nkn%2bV8OYyv2YyxkHF4JpWwZM45wbdxliYJnMXOII079CMob7qqpFB5M2%2bspTCAVrEZhP5fACASHGdiT4efAJ15o3Lht7G01%2bBvH0%2beOpqv349GUSbzYz0%2b7IAZFL7h7qyu%2fu%2bc3kzsi2S8xUxq%2fcuFOQB9QYV8rsIQA7sKUg0ymxBlOf9pnzcXTOuAu1%2bRKuCu0NH3uGXATR5GBylo7v7y1iQxe6s99H0hHTZgeTvfnV9%2fB9V9W8asA8diC4sefBywnCBzkiHEcJa6IPLPTkFlJyLQJCOVhIyuM88c1d1%2fIxRWTGbLosV8o28yzl3H2U8r%2fxKeFL18V%2foGrQfFSkN0JbH1YL2bzQoj8OwGBrqhEGQAA&web=0

let lookBackTm = ago(180d);
let TrimHtmlContent = (str:string)
{
    let step1 = replace("'", "'", replace(" ", " ", str));
    // Replace smart quotes and non-breaking spaces
    let step2 = replace("&nbsp;", " ", step1);
    // Replace HTML non-breaking space entity
    let step3 = replace("&amp;", "&", step2);
    // Replace ampersand entity
    let step4 = replace("&quot;", "\"", step3);
    // Replace quote entity
    let step5 = replace("&lt;", "<", step4);
    // Replace less-than entity
    let step6 = replace("&gt;", ">", step5);
    // Replace greater-than entity
    let step7 = replace("&#39;", "'", step6);
    // Replace single quote entity
    let step8 = replace("<[^>]*>", "", step7);
    // Remove HTML tags
    let step9 = replace("<!--[^>]*-->", "", step8);
    // Remove HTML comments
    let step10 = replace("\\s+", " ", step9);
    // Normalize multiple whitespaces to a single space
    step10
};
let getIncidentLink = (incident:string)
{
    let link = strcat("https://portal.microsofticm.com/imp/v3/incidents/details/", incident, "/home");
    link    
};
let getRepairItemLink = (workItemId:string)
{
    let link = strcat("https://dev.azure.com/msazure/One/_workitems/edit/", workItemId);
    link    
};
let getSimpleTeamName = (name: string)
{
    let splitList = split(name, "\\");
    let result = iif(array_length(splitList) > 1, splitList[1], name);
    result
};
let XinyanTeamIds = dynamic(['10549', '10661', '67334', '82812', '42690', '75939', '68685', '105484', '10475', '93543', '82813', '60163', '114480', '135033']);
let allData = cluster('https://icmdataro.centralus.kusto.windows.net').database('Common').Get_Icm_Incidents_WithTTx
| where ModifiedDate > lookBackTm
| where OwningTeamId in (XinyanTeamIds) and isempty( ParentIncidentId) and Severity <= 2
//don't include the ICM that has parrent
| where IncidentType =~ 'LiveSite' or IsOutageActual == 1
| distinct IncidentId, Title, CreateDate, ModifiedDate, IncidentType, OwningTeamName, OwningTenantName, OwningContactAlias, RepairCount, RepairClosedCount, TTD, TTN, TTEng, TTFix, TTM, Severity, SubscriptionCount, IsAutoDetected, IsOutageActual, PostmortemTitle, PostmortemStatus, Status, HasTsg, Tags, IsS360Related, S360Link, IsOutage;
let ICMIDs = allData
| summarize by IncidentId;
allData
| extend CreateDate = todatetime(format_datetime(CreateDate, 'yyyy-MM-dd'))
| extend IsOutage = iif(isempty( IsOutage), false, IsOutage), IsOutageActual = iif(isempty( IsOutageActual), false, IsOutageActual), HasTsg = iif(isempty( HasTsg), 0, HasTsg), IsS360Related = iif(isempty( IsS360Related), 0, IsS360Related), IsAutoDetected = iif(isempty( IsAutoDetected), 0, IsAutoDetected)
| extend TTFix = iif(isempty( TTFix), 0, TTFix), TTEng = iif(isempty( TTEng), 0, TTEng), TTM = iif(isempty( TTM), 0, TTM)
| extend icmLink = strcat('https://portal.microsofticm.com/imp/v5/incidents/details/', tostring(IncidentId), '/summary')
| project IncidentId, Title, CreateDate, ModifiedDate, IncidentType, OwningTeamName = getSimpleTeamName(OwningTeamName), OwningTenantName, OwningContactAlias, RepairCount, RepairClosedCount, TTD, TTN, TTEng, TTFix, TTM, Severity, SubscriptionCount, IsAutoDetected, IsOutageActual, PostmortemTitle, PostmortemStatus, Status, HasTsg, Tags, IsS360Related, S360Link, icmLink
| join kind=leftouter
    hint.num_partitions=50 hint.strategy=shuffle (     cluster('https://icmcluster.kusto.windows.net').database('IcMDataWarehouse').IncidentCustomFieldEntries
    | where IncidentId in (ICMIDs) and TeamId in (XinyanTeamIds)
    //and Name == "IssueCategory"
    | summarize hint.num_partitions=50 hint.strategy=shuffle arg_max(ModifiedDate, *) by IncidentId, Name
    | summarize hint.num_partitions=50 hint.strategy=shuffle       Category = max(iif(Name =~ 'IssueCategory', Value, ''))  by IncidentId
)
on IncidentId
| join kind=leftouter
    hint.num_partitions=50 hint.strategy=shuffle (     cluster('icmcluster').database('IcMDataWarehouse').IncidentsSnapshotV2
    | where CreateDate > lookBackTm
    | where IncidentId in (ICMIDs) and isempty( ParentIncidentId)
    | project IncidentId, RootCauseId
)
on IncidentId
| join kind=leftouter
    hint.num_partitions=50 hint.strategy=shuffle (     cluster('icmcluster').database('IcMDataWarehouse').RootCauses
    // find root cause
    | summarize arg_max(ModifiedDate, *) by RootCauseId
    | project RootCauseId, RCATitle = Title, RCADesscription = TrimHtmlContent(Description), IsCausedByChange
)
on RootCauseId
| join kind=leftouter
    hint.num_partitions=50 hint.strategy=shuffle (     cluster('icmcluster').database('IcMDataWarehouse').IncidentBugs
    // get work item
    | where CreatedDate > lookBackTm
    | where IncidentId in (ICMIDs)
    | summarize arg_max(ModifiedDate, *) by IncidentId, ExternalId
    | summarize RepairItems = make_set(ExternalId) by IncidentId
    | project IncidentId, RepairItems
)
on IncidentId
| extend IsMissingRCA = iif (tolower(Status) != 'resolved', 0, iif(isempty(RootCauseId), 1, 0)), IncidentLink = getIncidentLink(IncidentId)
| extend IncidentClass = case(     Title has "ApiUnexpectedFailures", 'CRPAPI',     Title has "NRPQos", 'NRPQosAPI',     Title has "[Qos] Server Side Error Rate High]","regionlevelQos",     Title has "LogicalDisk C FreeSpace Critical", "Disk",       Title has "WindowsFabricPartitionDown","PartitionDown",             Title has "PartitionQuorumLossDetectedInServiceFabric","PartitionDown",           Title has "DiagnosticsProd","DiagnosticsProd",   Title has  "port exhaustion","port",        Title has "MdmQos","MdmQos",     Title has "Aegis","Aegis",   Title has  "LVIDPercent_75","compact",      Title has "[ARM] requests to", "ARMAPI",     Title has "NRP PerfCounter", 'NRPCPU',     Title has "Explicit Locks","Locks",      Title has "Runner", "Runner",                Title has "[RunnerICM Aggregation CP", "Runner",      'Other'
// default value if neither condition is met
)
| project IncidentId, Severity, IncidentLink, tostring(RepairItems), IsMissingRCA, IsOutageActual, RCATitle, RCADesscription, IsCausedByChange, Title, CreateDate, ModifiedDate, IncidentType, OwningTeamName, OwningTenantName, OwningContactAlias, RepairCount, RepairClosedCount, TTD, TTN, TTEng, TTFix, TTM, SubscriptionCount, IsAutoDetected, PostmortemTitle, PostmortemStatus, Status, HasTsg, IsS360Related,S360Link, Category, RootCauseId, IncidentClass